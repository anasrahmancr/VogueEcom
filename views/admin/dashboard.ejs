<div>
  <h2 class="content-title card-title">Dashboard</h2>
  <p>Whole data about your business here</p>
</div>

<div class="row">
  <div class="col-lg-3">
    <div class="card card-body mb-4">
      <article class="icontext">
        <span class="icon icon-sm rounded-circle bg-primary-light"
          ><i class="text-primary material-icons md-monetization_on"></i
        ></span>
        <div class="text">
          <h6 class="mb-1 card-title">Revenue</h6>
          <% if(currentMonthSales) { %>
          <span>₹ <%= currentMonthSales.totalAmount %></span>
          <% } else { %>
          <span>₹ 0</span>
          <% } %>
          <span class="text-sm"> On this month </span>
        </div>
      </article>
    </div>
  </div>
  <div class="col-lg-3">
    <div class="card card-body mb-4">
      <article class="icontext">
        <span class="icon icon-sm rounded-circle bg-success-light"
          ><i class="text-success material-icons md-local_shipping"></i
        ></span>
        <div class="text">
          <h6 class="mb-1 card-title">Orders</h6>
          <span> <%= orders.length %> </span>
          <span class="text-sm"> Including orders in transit </span>
        </div>
      </article>
    </div>
  </div>
  <div class="col-lg-3">
    <div class="card card-body mb-4">
      <article class="icontext">
        <span class="icon icon-sm rounded-circle bg-warning-light"
          ><i class="text-warning material-icons md-qr_code"></i
        ></span>
        <div class="text">
          <h6 class="mb-1 card-title">Products</h6>
          <span> <%= allProducts.length %> </span>
          <span class="text-sm"> Including Disabled Products </span>
        </div>
      </article>
    </div>
  </div>
  <div class="col-lg-3">
    <div class="card card-body mb-4">
      <article class="icontext">
        <span class="icon icon-sm rounded-circle bg-info-light"
          ><i class="text-info material-icons md-group"></i
        ></span>
        <div class="text">
          <h6 class="mb-1 card-title">Total Users</h6>
          <span> <%= allUsers.length %> </span>
          <span class="text-sm"> Including the Blocked Users </span>
        </div>
      </article>
    </div>
  </div>
</div>
<div class="row">
  <div class="col-xl-8 col-lg-12">
    <div class="row">
      <div class="col-12">
        <div class="card mb-4">
          <article class="card-body">
            <h5 class="card-title">Sale statistics</h5>
            <select id="chart-filter">
              <option value="monthly">Monthly</option>
              <option value="yearly">Yearly</option>
            </select>
            <canvas id="myChart" height="120rem"></canvas>
          </article>
        </div>
      </div>
      <div class="col-12">
        <div class="card mb-4">
          <article class="card-body">
            <h5 class="card-title">Order statitics</h5>
            <select id="chart-filter2">
              <option value="monthly">Monthly</option>
              <option value="yearly">Yearly</option>
            </select>
            <canvas id="myChart2" height="120rem"></canvas>
          </article>
        </div>
      </div>
    </div>
  </div>
  <div class="col-xl-4 col-lg-12">
    <div class="card mb-4">
      <article class="card-body">
        <h5 class="card-title">Sales on category</h5>
        <canvas id="categoryChart"></canvas>
      </article>
    </div>
  </div>
</div>

<script>
  if ($("#myChart").length) {
    const strigData = `<%- JSON.stringify(salesByMonth) %>`;
    const strigYearly = `<%- JSON.stringify(salesByYear) %>`;
    const salesData = JSON.parse(strigData);
    const yearlyData = JSON.parse(strigYearly);
    var ctx = document.getElementById("myChart").getContext("2d");
    var chart = new Chart(ctx, {
      type: "line",
      data: {
        labels: [
          "Jan",
          "Feb",
          "Mar",
          "Apr",
          "May",
          "Jun",
          "Jul",
          "Aug",
          "Sep",
          "Oct",
          "Nov",
          "Dec",
        ],
        datasets: [
          {
            label: "Sales",
            tension: 0.3,
            fill: true,
            backgroundColor: "rgba(44, 120, 220, 0.2)",
            borderColor: "rgba(44, 120, 220)",
            data: Array.from({ length: 12 }).map((_, index) => {
              const monthSales = salesData.find(
                (sale) => sale._id === index + 1
              );
              return monthSales ? monthSales.totalAmount : 0;
            }),
          },
        ],
      },
      options: {
        plugins: {
          legend: {
            labels: {
              usePointStyle: true,
            },
          },
        },
      },
    });
    const filterSelect = document.getElementById("chart-filter");
    filterSelect.addEventListener("change", () => {
      const filterValue = filterSelect.value;
      if (filterValue === "monthly") {
        chart.data.labels = [
          "Jan",
          "Feb",
          "Mar",
          "Apr",
          "May",
          "Jun",
          "Jul",
          "Aug",
          "Sep",
          "Oct",
          "Nov",
          "Dec",
        ];
        chart.data.datasets[0].data = Array.from({ length: 12 }).map(
          (_, index) => {
            const monthSales = salesData.find((sale) => sale._id === index + 1);
            return monthSales ? monthSales.totalAmount : 0;
          }
        );
        chart.update();
      } else if (filterValue === "yearly") {
        chart.data.labels = ["2021", "2022", "2023", "2024", "2025"];
        chart.data.datasets[0].data = chart.data.labels.map((label) => {
          const yearSales = yearlyData.find((sale) => sale._id == label);
          return yearSales ? yearSales.totalAmount : 0;
        });
        chart.update();
      }
    });
  }
  if ($("#myChart2").length) {
    const strigData = `<%- JSON.stringify(ordersByDate) %>`;
    const orderData = JSON.parse(strigData);
    var ctx = document.getElementById("myChart2").getContext("2d");
    var orderChart = new Chart(ctx, {
      type: "bar",
      data: {
        labels: [
          "Jan",
          "Feb",
          "Mar",
          "Apr",
          "May",
          "Jun",
          "Jul",
          "Aug",
          "Sep",
          "Oct",
          "Nov",
          "Dec",
        ],
        datasets: [
          {
            label: "Orders",
            backgroundColor: "#5897fb",
            barThickness: 15,
            data: Array.from({ length: 12 }).map((_, index) => {
              const monthlyOrder = orderData.find(
                (order) => order._id.month === index + 1
              );
              return monthlyOrder ? monthlyOrder.count : 0;
            }),
          },
        ],
      },
      options: {
        plugins: {
          legend: {
            labels: {
              usePointStyle: true,
            },
          },
        },
        scales: {
          y: {
            beginAtZero: true,
          },
        },
      },
    });
    const filterSelect = document.getElementById("chart-filter2");
    filterSelect.addEventListener("change", () => {
      const filterValue = filterSelect.value;
      if (filterValue === "monthly") {
        orderChart.data.labels = [
          "Jan",
          "Feb",
          "Mar",
          "Apr",
          "May",
          "Jun",
          "Jul",
          "Aug",
          "Sep",
          "Oct",
          "Nov",
          "Dec",
        ];
        orderChart.data.datasets[0].data = Array.from({ length: 12 }).map(
          (_, index) => {
            const monthlyOrder = orderData.find(
              (order) => order._id.month === index + 1
            );
            return monthlyOrder ? monthlyOrder.count : 0;
          }
        );
        orderChart.update();
      } else if (filterValue === "yearly") {
        const ordersByYear = orderData.reduce((acc, cur) => {
          const year = cur._id.year;
          const count = cur.count;
          if (year in acc) {
            acc[year] += count;
          } else {
            acc[year] = count;
          }
          return acc;
        }, {});
        const years = ["2021", "2022", "2023", "2024", "2025"];
        orderChart.data.labels = years;
        orderChart.data.datasets[0].data = years.map(
          (year) => ordersByYear[year] || 0
        );
        orderChart.update();
      }
    });
  }
  if ($("#categoryChart").length) {
    const strigData = `<%- JSON.stringify(categorySales) %>`;
    const categorySalesData = JSON.parse(strigData);
    console.log(categorySalesData);
    const categories = categorySalesData.map((category) => category.name);
    console.log(categories);
    const categoryColors = categorySalesData.map(() => {
      const randomColor = Math.floor(Math.random() * 16777215).toString(16);
      return `#${randomColor.padStart(6, "0")}`;
    });
    const categoryCount = categorySalesData.map((category) => category.count);
    var ctx = document.getElementById("categoryChart").getContext("2d");
    var categoryChart = new Chart(ctx, {
      type: "doughnut",
      data: {
        labels: categories,
        datasets: [
          {
            label: "Categories",
            backgroundColor: categoryColors,
            data: categoryCount,
          },
        ],
      },
      options: {
        plugins: {
          legend: {
            labels: {
              usePointStyle: true,
            },
          },
        },
      },
    });
  }
</script>
